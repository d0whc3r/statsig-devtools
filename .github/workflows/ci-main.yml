name: 'CI - Main Branch'

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      run-e2e-tests:
        description: 'Run E2E tests'
        required: false
        default: true
        type: boolean
      create-release:
        description: 'Create release artifacts'
        required: false
        default: true
        type: boolean

env:
  NODE_VERSION: '22'

jobs:
  # Setup and dependency installation
  setup:
    name: 'Setup & Dependencies'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

  # Quality checks (lint, format, type-check)
  quality-checks:
    name: 'Quality Checks'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run quality checks
        uses: ./.github/actions/quality-checks

  # Unit tests with coverage
  unit-tests:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          run-unit-tests: 'true'
          run-e2e-tests: 'false'
          upload-coverage: 'true'

  # Build extensions
  build:
    name: 'Build Extensions'
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build extensions
        uses: ./.github/actions/build-extensions
        with:
          build-chrome: 'true'
          build-firefox: 'true'
          upload-artifacts: 'true'

  # E2E tests
  e2e-tests:
    name: 'E2E Tests'
    runs-on: ubuntu-latest
    needs: build
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.run-e2e-tests == 'true' ||
      github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox

      - name: Run E2E tests
        uses: ./.github/actions/run-tests
        with:
          run-unit-tests: 'false'
          run-e2e-tests: 'true'

  # Create release artifacts (ZIP files for stores)
  release-artifacts:
    name: 'Create Release Artifacts'
    runs-on: ubuntu-latest
    needs: [build, e2e-tests]
    if: |
      always() && 
      needs.build.result == 'success' && 
      (needs.e2e-tests.result == 'success' || needs.e2e-tests.result == 'skipped') &&
      (github.event_name == 'push' || 
       (github.event_name == 'workflow_dispatch' && github.event.inputs.create-release == 'true'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build extensions for release
        uses: ./.github/actions/build-extensions
        with:
          build-chrome: 'true'
          build-firefox: 'true'
          upload-artifacts: 'false'

      - name: Create release packages
        uses: ./.github/actions/create-release-artifacts
        with:
          create-chrome-zip: 'true'
          create-firefox-zip: 'true'

  # Security scan (optional)
  security-scan:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    needs: setup
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run npm audit
        run: |
          echo "üîí Running security audit..."
          npm audit --audit-level=moderate
          echo "‚úÖ Security audit completed"

  # Final status check
  ci-success:
    name: 'CI Success'
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests, build, e2e-tests, release-artifacts]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "üìä Job Results Summary:"
          echo "  - Quality Checks: ${{ needs.quality-checks.result }}"
          echo "  - Unit Tests: ${{ needs.unit-tests.result }}"
          echo "  - Build: ${{ needs.build.result }}"
          echo "  - E2E Tests: ${{ needs.e2e-tests.result }}"
          echo "  - Release Artifacts: ${{ needs.release-artifacts.result }}"

          # Check critical jobs
          if [ "${{ needs.quality-checks.result }}" != "success" ] || 
             [ "${{ needs.unit-tests.result }}" != "success" ] || 
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "‚ùå Critical CI jobs failed"
            exit 1
          fi

          # Check E2E tests if they ran
          if [ "${{ needs.e2e-tests.result }}" == "failure" ]; then
            echo "‚ùå E2E tests failed"
            exit 1
          fi

          echo "‚úÖ All CI jobs completed successfully"
